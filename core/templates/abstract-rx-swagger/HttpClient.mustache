{{>licenseInfo}}

package {{invokerPackage}};

import rx.Observable;

/**
 * Observable Generic HTTP Client.
 */
public interface HttpClient {
	/**
     * This method makes an HTTP GET request and return response as ApiResponse of Observable.
     *
     * @param endpoint        Endpoint at which to make the POST call (including Query Parameters (i.e. &foo=bar))
     * @param request 		  ApiRequest that will be used to build the final Request
     * @return Observable with ApiResponse value
     */
     Observable<ApiResponse> get(String endpoint, ApiRequest request);

	/**
     * This method makes an HTTP POST request and return response as ApiResponse of Observable.
     *
     * @param endpoint        Endpoint at which to make the POST call (including Query Parameters (i.e. &foo=bar))
     * @param request 		  ApiRequest that will be used to build the final Request
     * @return Observable with ApiResponse value
     */
    Observable<ApiResponse> post(String endpoint, ApiRequest request);

	/**
     * This method makes an HTTP PUT request and return response as ApiResponse of Observable.
     *
     * @param endpoint        Endpoint at which to make the POST call (including Query Parameters (i.e. &foo=bar))
     * @param request 		  ApiRequest that will be used to build the final Request
     * @return Observable with ApiResponse value
     */
    Observable<ApiResponse> put(String endpoint, ApiRequest request);

	/**
     * This method makes an HTTP DELETE request and return response as ApiResponse of Observable.
     *
     * @param endpoint        Endpoint at which to make the POST call (including Query Parameters (i.e. &foo=bar))
     * @param request 		  ApiRequest that will be used to build the final Request
     * @return Observable with ApiResponse value
     */
    Observable<ApiResponse> delete(String endpoint, ApiRequest request);
}
